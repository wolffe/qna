<?php
/* This file has been auto-generated. Do not edit this file directly. */

abstract class Sabai_Addon_File_Model_Base_TokenGateway extends SabaiFramework_Model_Gateway
{
    public function getName()
    {
        return 'file_token';
    }

    public function getFields()
    {
        return array('token_hash' => SabaiFramework_Model::KEY_TYPE_CHAR, 'token_form_build_id' => SabaiFramework_Model::KEY_TYPE_CHAR, 'token_form_field_name' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'token_expires' => SabaiFramework_Model::KEY_TYPE_INT, 'token_settings' => SabaiFramework_Model::KEY_TYPE_TEXT, 'token_file_count' => SabaiFramework_Model::KEY_TYPE_INT, 'token_id' => SabaiFramework_Model::KEY_TYPE_INT, 'token_created' => SabaiFramework_Model::KEY_TYPE_INT, 'token_updated' => SabaiFramework_Model::KEY_TYPE_INT, 'token_user_id' => SabaiFramework_Model::KEY_TYPE_INT);
    }

    protected function _getIdFieldName()
    {
        return 'token_id';
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sfile_token WHERE token_id = %d',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $id
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sfile_token WHERE token_id IN (%s)',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            implode(', ', array_map('intval', $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %1$s FROM %2$sfile_token file_token WHERE %3$s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $criteriaStr
        );
    }

    protected function _getInsertQuery(&$values)
    {
        $values['token_created'] = time();
        $values['token_updated'] = 0;
        return sprintf('INSERT INTO %sfile_token(token_hash, token_form_build_id, token_form_field_name, token_expires, token_settings, token_file_count, token_id, token_created, token_updated, token_user_id) VALUES(%s, %s, %s, %d, %s, %d, %s, %d, %d, %d)', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['token_hash']), $this->_db->escapeString($values['token_form_build_id']), $this->_db->escapeString($values['token_form_field_name']), $values['token_expires'], $this->_db->escapeString(serialize($values['token_settings'])), $values['token_file_count'], empty($values['token_id']) ? 'NULL' : intval($values['token_id']), $values['token_created'], $values['token_updated'], $values['token_user_id']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['token_updated'];
        $values['token_updated'] = time();
        return sprintf('UPDATE %sfile_token SET token_hash = %s, token_form_build_id = %s, token_form_field_name = %s, token_expires = %d, token_settings = %s, token_file_count = %d, token_updated = %d, token_user_id = %d WHERE token_id = %d AND token_updated = %d', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['token_hash']), $this->_db->escapeString($values['token_form_build_id']), $this->_db->escapeString($values['token_form_field_name']), $values['token_expires'], $this->_db->escapeString(serialize($values['token_settings'])), $values['token_file_count'], $values['token_updated'], $values['token_user_id'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$sfile_token WHERE token_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['token_updated'] = 'token_updated=' . time();
        return sprintf('UPDATE %sfile_token file_token SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(', ', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE file_token FROM %1$sfile_token file_token WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$sfile_token file_token WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }
}