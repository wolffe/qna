<?php
/* This file has been auto-generated. Do not edit this file directly. */

abstract class Sabai_Addon_File_Model_Base_FileGateway extends SabaiFramework_Model_Gateway
{
    public function getName()
    {
        return 'file_file';
    }

    public function getFields()
    {
        return array('file_name' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'file_title' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'file_type' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'file_size' => SabaiFramework_Model::KEY_TYPE_INT, 'file_extension' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'file_hash' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'file_is_image' => SabaiFramework_Model::KEY_TYPE_INT, 'file_width' => SabaiFramework_Model::KEY_TYPE_INT, 'file_height' => SabaiFramework_Model::KEY_TYPE_INT, 'file_id' => SabaiFramework_Model::KEY_TYPE_INT, 'file_created' => SabaiFramework_Model::KEY_TYPE_INT, 'file_updated' => SabaiFramework_Model::KEY_TYPE_INT, 'file_token_id' => SabaiFramework_Model::KEY_TYPE_INT, 'file_user_id' => SabaiFramework_Model::KEY_TYPE_INT);
    }

    protected function _getIdFieldName()
    {
        return 'file_id';
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sfile_file WHERE file_id = %d',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $id
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sfile_file WHERE file_id IN (%s)',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            implode(', ', array_map('intval', $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %1$s FROM %2$sfile_file file_file WHERE %3$s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $criteriaStr
        );
    }

    protected function _getInsertQuery(&$values)
    {
        $values['file_created'] = time();
        $values['file_updated'] = 0;
        return sprintf('INSERT INTO %sfile_file(file_name, file_title, file_type, file_size, file_extension, file_hash, file_is_image, file_width, file_height, file_id, file_created, file_updated, file_token_id, file_user_id) VALUES(%s, %s, %s, %d, %s, %s, %d, %d, %d, %s, %d, %d, %d, %d)', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['file_name']), $this->_db->escapeString($values['file_title']), $this->_db->escapeString($values['file_type']), $values['file_size'], $this->_db->escapeString($values['file_extension']), $this->_db->escapeString($values['file_hash']), $values['file_is_image'], $values['file_width'], $values['file_height'], empty($values['file_id']) ? 'NULL' : intval($values['file_id']), $values['file_created'], $values['file_updated'], $values['file_token_id'], $values['file_user_id']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['file_updated'];
        $values['file_updated'] = time();
        return sprintf('UPDATE %sfile_file SET file_name = %s, file_title = %s, file_type = %s, file_size = %d, file_extension = %s, file_hash = %s, file_is_image = %d, file_width = %d, file_height = %d, file_updated = %d, file_token_id = %d, file_user_id = %d WHERE file_id = %d AND file_updated = %d', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['file_name']), $this->_db->escapeString($values['file_title']), $this->_db->escapeString($values['file_type']), $values['file_size'], $this->_db->escapeString($values['file_extension']), $this->_db->escapeString($values['file_hash']), $values['file_is_image'], $values['file_width'], $values['file_height'], $values['file_updated'], $values['file_token_id'], $values['file_user_id'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$sfile_file WHERE file_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['file_updated'] = 'file_updated=' . time();
        return sprintf('UPDATE %sfile_file file_file SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(', ', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE file_file FROM %1$sfile_file file_file WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$sfile_file file_file WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _afterInsert1($id, array $new)
    {
    }

    protected function _afterDelete1($id, array $old)
    {
    }

    protected function _afterUpdate1($id, array $new, array $old)
    {
    }

    protected function _afterInsert($id, array $new)
    {
        $this->_afterInsert1($id, $new);
    }

    protected function _afterUpdate($id, array $new, array $old)
    {
        $this->_afterUpdate1($id, $new, $old);
    }

    protected function _afterDelete($id, array $old)
    {
        $this->_afterDelete1($id, $old);
    }
}