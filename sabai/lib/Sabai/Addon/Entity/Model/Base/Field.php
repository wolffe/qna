<?php
/* This file has been auto-generated. Do not edit this file directly. */

abstract class Sabai_Addon_Entity_Model_Base_Field extends SabaiFramework_Model_Entity
{
    public function __construct(SabaiFramework_Model $model)
    {
        parent::__construct('Field', $model);
        $this->_vars = array('field_data' => null, 'field_id' => 0, 'field_created' => 0, 'field_updated' => 0, 'field_bundle_id' => 0, 'field_fieldconfig_id' => 0);
    }

    public function __clone()
    {
        $this->_vars = array('field_id' => 0, 'field_created' => 0, 'field_updated' => 0) + $this->_vars;
    }

    public function __toString()
    {
        return 'Field:' . $this->__get('id');
    }

    public function addFilter(Sabai_Addon_Entity_Model_Filter $entity)
    {
        $entity->Field = $this;

        return $this;
    }

    public function removeFilter(Sabai_Addon_Entity_Model_Filter $entity)
    {
        $this->removeFilterById($entity->id);

        return $this;
    }

    public function removeFilterById($id)
    {
        $this->_removeEntityById('filter_id', 'Filter', $id);

        return $this;
    }

    public function createFilter()
    {
        return $this->_createEntity('Filter');
    }

    public function removeFilters()
    {
        $this->_removeEntities('Filter');

        return $this;
    }

    public function __get($name)
    {
        if ($name === 'data')
            return $this->_vars['field_data'];
        elseif ($name === 'id')
            return $this->_vars['field_id'];
        elseif ($name === 'created')
            return $this->_vars['field_created'];
        elseif ($name === 'updated')
            return $this->_vars['field_updated'];
        elseif ($name === 'bundle_id')
            return $this->_vars['field_bundle_id'];
        elseif ($name === 'fieldconfig_id')
            return $this->_vars['field_fieldconfig_id'];
        elseif ($name === 'Bundle')
            return $this->_fetchEntity('Bundle', 'bundle_id');
        elseif ($name === 'FieldConfig')
            return $this->_fetchEntity('FieldConfig', 'fieldconfig_id');
        elseif ($name === 'Filters')
            return $this->_fetchEntities('Filter', 'Filters');
        else
            return $this->fetchObject($name);
    }

    public function __set($name, $value)
    {
        if ($name === 'data')
            $this->_setVar('field_data', $value);
        elseif ($name === 'id')
            $this->_setVar('field_id', $value);
        elseif ($name === 'bundle_id')
            $this->_assignEntityById('Bundle', $value, 'field_bundle_id');
        elseif ($name === 'Bundle') {
            $_value = is_array($value) ? $value[0] : $value;
            if (is_object($_value)) {
                $this->_assignEntity($_value, 'field_bundle_id');
            } else {
                $this->_assignEntityById('Bundle', $_value, 'field_bundle_id');
            }
        }
        elseif ($name === 'fieldconfig_id')
            $this->_assignEntityById('FieldConfig', $value, 'field_fieldconfig_id');
        elseif ($name === 'FieldConfig') {
            $_value = is_array($value) ? $value[0] : $value;
            if (is_object($_value)) {
                $this->_assignEntity($_value, 'field_fieldconfig_id');
            } else {
                $this->_assignEntityById('FieldConfig', $_value, 'field_fieldconfig_id');
            }
        }
        elseif ($name === 'Filters') {
            $this->removeFilters();
            foreach (array_keys($value) as $i) $this->addFilter($value[$i]);
        }
        else
            $this->assignObject($name, $value);
    }

    protected function _initVar($name, $value)
    {
        if ($name === 'field_data')
            $this->_vars['field_data'] = @unserialize($value);
        elseif ($name === 'field_id')
            $this->_vars['field_id'] = (int)$value;
        elseif ($name === 'field_created')
            $this->_vars['field_created'] = (int)$value;
        elseif ($name === 'field_updated')
            $this->_vars['field_updated'] = (int)$value;
        elseif ($name === 'field_bundle_id')
            $this->_vars['field_bundle_id'] = (int)$value;
        elseif ($name === 'field_fieldconfig_id')
            $this->_vars['field_fieldconfig_id'] = (int)$value;
        else
            $this->_vars[$name] = $value;
    }
}

abstract class Sabai_Addon_Entity_Model_Base_FieldRepository extends SabaiFramework_Model_EntityRepository
{
    public function __construct(SabaiFramework_Model $model)
    {
        parent::__construct('Field', $model);
    }

    public function fetchByBundle($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeign('field_bundle_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateByBundle($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('Bundle', $id, $perpage, $sort, $order);
    }

    public function countByBundle($id)
    {
        return $this->_countByForeign('field_bundle_id', $id);
    }

    public function fetchByBundleAndCriteria($id, SabaiFramework_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeignAndCriteria('field_bundle_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function paginateByBundleAndCriteria($id, SabaiFramework_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('Bundle', $id, $criteria, $perpage, $sort, $order);
    }

    public function countByBundleAndCriteria($id, SabaiFramework_Criteria $criteria)
    {
        return $this->_countByForeignAndCriteria('field_bundle_id', $id, $criteria);
    }

    public function fetchByFieldConfig($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeign('field_fieldconfig_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateByFieldConfig($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('FieldConfig', $id, $perpage, $sort, $order);
    }

    public function countByFieldConfig($id)
    {
        return $this->_countByForeign('field_fieldconfig_id', $id);
    }

    public function fetchByFieldConfigAndCriteria($id, SabaiFramework_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeignAndCriteria('field_fieldconfig_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function paginateByFieldConfigAndCriteria($id, SabaiFramework_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('FieldConfig', $id, $criteria, $perpage, $sort, $order);
    }

    public function countByFieldConfigAndCriteria($id, SabaiFramework_Criteria $criteria)
    {
        return $this->_countByForeignAndCriteria('field_fieldconfig_id', $id, $criteria);
    }

    protected function _getCollectionByRowset(SabaiFramework_DB_Rowset $rs)
    {
        return new Sabai_Addon_Entity_Model_Base_FieldsByRowset($rs, $this->_model->create('Field'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Sabai_Addon_Entity_Model_Base_Fields($this->_model, $entities);
    }
}

class Sabai_Addon_Entity_Model_Base_FieldsByRowset extends SabaiFramework_Model_EntityCollection_Rowset
{
    public function __construct(SabaiFramework_DB_Rowset $rs, Sabai_Addon_Entity_Model_Field $emptyEntity, SabaiFramework_Model $model)
    {
        parent::__construct('Fields', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(SabaiFramework_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Sabai_Addon_Entity_Model_Base_Fields extends SabaiFramework_Model_EntityCollection_Array
{
    public function __construct(SabaiFramework_Model $model, array $entities = array())
    {
        parent::__construct($model, 'Fields', $entities);
    }
}