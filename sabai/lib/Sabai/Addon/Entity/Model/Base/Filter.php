<?php
/* This file has been auto-generated. Do not edit this file directly. */

abstract class Sabai_Addon_Entity_Model_Base_Filter extends SabaiFramework_Model_Entity
{
    public function __construct(SabaiFramework_Model $model)
    {
        parent::__construct('Filter', $model);
        $this->_vars = array('filter_name' => null, 'filter_type' => null, 'filter_data' => null, 'filter_id' => 0, 'filter_created' => 0, 'filter_updated' => 0, 'filter_bundle_id' => 0, 'filter_field_id' => 0);
    }

    public function __clone()
    {
        $this->_vars = array('filter_id' => 0, 'filter_created' => 0, 'filter_updated' => 0) + $this->_vars;
    }

    public function __toString()
    {
        return $this->__get('name');
    }

    public function __get($name)
    {
        if ($name === 'name')
            return $this->_vars['filter_name'];
        elseif ($name === 'type')
            return $this->_vars['filter_type'];
        elseif ($name === 'data')
            return $this->_vars['filter_data'];
        elseif ($name === 'id')
            return $this->_vars['filter_id'];
        elseif ($name === 'created')
            return $this->_vars['filter_created'];
        elseif ($name === 'updated')
            return $this->_vars['filter_updated'];
        elseif ($name === 'bundle_id')
            return $this->_vars['filter_bundle_id'];
        elseif ($name === 'field_id')
            return $this->_vars['filter_field_id'];
        elseif ($name === 'Bundle')
            return $this->_fetchEntity('Bundle', 'bundle_id');
        elseif ($name === 'Field')
            return $this->_fetchEntity('Field', 'field_id');
        else
            return $this->fetchObject($name);
    }

    public function __set($name, $value)
    {
        if ($name === 'name')
            $this->_setVar('filter_name', $value);
        elseif ($name === 'type')
            $this->_setVar('filter_type', $value);
        elseif ($name === 'data')
            $this->_setVar('filter_data', $value);
        elseif ($name === 'id')
            $this->_setVar('filter_id', $value);
        elseif ($name === 'bundle_id')
            $this->_assignEntityById('Bundle', $value, 'filter_bundle_id');
        elseif ($name === 'Bundle') {
            $_value = is_array($value) ? $value[0] : $value;
            if (is_object($_value)) {
                $this->_assignEntity($_value, 'filter_bundle_id');
            } else {
                $this->_assignEntityById('Bundle', $_value, 'filter_bundle_id');
            }
        }
        elseif ($name === 'field_id')
            $this->_assignEntityById('Field', $value, 'filter_field_id');
        elseif ($name === 'Field') {
            $_value = is_array($value) ? $value[0] : $value;
            if (is_object($_value)) {
                $this->_assignEntity($_value, 'filter_field_id');
            } else {
                $this->_assignEntityById('Field', $_value, 'filter_field_id');
            }
        }
        else
            $this->assignObject($name, $value);
    }

    protected function _initVar($name, $value)
    {
        if ($name === 'filter_data')
            $this->_vars['filter_data'] = @unserialize($value);
        elseif ($name === 'filter_id')
            $this->_vars['filter_id'] = (int)$value;
        elseif ($name === 'filter_created')
            $this->_vars['filter_created'] = (int)$value;
        elseif ($name === 'filter_updated')
            $this->_vars['filter_updated'] = (int)$value;
        elseif ($name === 'filter_bundle_id')
            $this->_vars['filter_bundle_id'] = (int)$value;
        elseif ($name === 'filter_field_id')
            $this->_vars['filter_field_id'] = (int)$value;
        else
            $this->_vars[$name] = $value;
    }
}

abstract class Sabai_Addon_Entity_Model_Base_FilterRepository extends SabaiFramework_Model_EntityRepository
{
    public function __construct(SabaiFramework_Model $model)
    {
        parent::__construct('Filter', $model);
    }

    public function fetchByBundle($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeign('filter_bundle_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateByBundle($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('Bundle', $id, $perpage, $sort, $order);
    }

    public function countByBundle($id)
    {
        return $this->_countByForeign('filter_bundle_id', $id);
    }

    public function fetchByBundleAndCriteria($id, SabaiFramework_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeignAndCriteria('filter_bundle_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function paginateByBundleAndCriteria($id, SabaiFramework_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('Bundle', $id, $criteria, $perpage, $sort, $order);
    }

    public function countByBundleAndCriteria($id, SabaiFramework_Criteria $criteria)
    {
        return $this->_countByForeignAndCriteria('filter_bundle_id', $id, $criteria);
    }

    public function fetchByField($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeign('filter_field_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateByField($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('Field', $id, $perpage, $sort, $order);
    }

    public function countByField($id)
    {
        return $this->_countByForeign('filter_field_id', $id);
    }

    public function fetchByFieldAndCriteria($id, SabaiFramework_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeignAndCriteria('filter_field_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function paginateByFieldAndCriteria($id, SabaiFramework_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('Field', $id, $criteria, $perpage, $sort, $order);
    }

    public function countByFieldAndCriteria($id, SabaiFramework_Criteria $criteria)
    {
        return $this->_countByForeignAndCriteria('filter_field_id', $id, $criteria);
    }

    protected function _getCollectionByRowset(SabaiFramework_DB_Rowset $rs)
    {
        return new Sabai_Addon_Entity_Model_Base_FiltersByRowset($rs, $this->_model->create('Filter'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Sabai_Addon_Entity_Model_Base_Filters($this->_model, $entities);
    }
}

class Sabai_Addon_Entity_Model_Base_FiltersByRowset extends SabaiFramework_Model_EntityCollection_Rowset
{
    public function __construct(SabaiFramework_DB_Rowset $rs, Sabai_Addon_Entity_Model_Filter $emptyEntity, SabaiFramework_Model $model)
    {
        parent::__construct('Filters', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(SabaiFramework_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Sabai_Addon_Entity_Model_Base_Filters extends SabaiFramework_Model_EntityCollection_Array
{
    public function __construct(SabaiFramework_Model $model, array $entities = array())
    {
        parent::__construct($model, 'Filters', $entities);
    }
}