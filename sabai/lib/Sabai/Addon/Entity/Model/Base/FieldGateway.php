<?php
/* This file has been auto-generated. Do not edit this file directly. */

abstract class Sabai_Addon_Entity_Model_Base_FieldGateway extends SabaiFramework_Model_Gateway
{
    public function getName()
    {
        return 'entity_field';
    }

    public function getFields()
    {
        return array('field_data' => SabaiFramework_Model::KEY_TYPE_TEXT, 'field_id' => SabaiFramework_Model::KEY_TYPE_INT, 'field_created' => SabaiFramework_Model::KEY_TYPE_INT, 'field_updated' => SabaiFramework_Model::KEY_TYPE_INT, 'field_bundle_id' => SabaiFramework_Model::KEY_TYPE_INT, 'field_fieldconfig_id' => SabaiFramework_Model::KEY_TYPE_INT);
    }

    protected function _getIdFieldName()
    {
        return 'field_id';
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sentity_field WHERE field_id = %d',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $id
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sentity_field WHERE field_id IN (%s)',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            implode(', ', array_map('intval', $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %1$s FROM %2$sentity_field entity_field WHERE %3$s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $criteriaStr
        );
    }

    protected function _getInsertQuery(&$values)
    {
        $values['field_created'] = time();
        $values['field_updated'] = 0;
        return sprintf('INSERT INTO %sentity_field(field_data, field_id, field_created, field_updated, field_bundle_id, field_fieldconfig_id) VALUES(%s, %s, %d, %d, %d, %d)', $this->_db->getResourcePrefix(), $this->_db->escapeString(serialize($values['field_data'])), empty($values['field_id']) ? 'NULL' : intval($values['field_id']), $values['field_created'], $values['field_updated'], $values['field_bundle_id'], $values['field_fieldconfig_id']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['field_updated'];
        $values['field_updated'] = time();
        return sprintf('UPDATE %sentity_field SET field_data = %s, field_updated = %d, field_bundle_id = %d, field_fieldconfig_id = %d WHERE field_id = %d AND field_updated = %d', $this->_db->getResourcePrefix(), $this->_db->escapeString(serialize($values['field_data'])), $values['field_updated'], $values['field_bundle_id'], $values['field_fieldconfig_id'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$sentity_field WHERE field_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['field_updated'] = 'field_updated=' . time();
        return sprintf('UPDATE %sentity_field entity_field SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(', ', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE entity_field, table1 FROM %1$sentity_field entity_field LEFT JOIN %1$sentity_filter table1 ON entity_field.field_id = table1.filter_field_id WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$sentity_field entity_field WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _afterInsert1($id, array $new)
    {
    }

    protected function _afterDelete1($id, array $old)
    {
    }

    protected function _afterUpdate1($id, array $new, array $old)
    {
    }

    protected function _beforeDelete1($id, array $old)
    {
        $this->_db->exec(sprintf('DELETE table0 FROM %1$sentity_filter table0 WHERE table0.filter_field_id = %2$d', $this->_db->getResourcePrefix(), $id));
    }

    protected function _afterInsert($id, array $new)
    {
        $this->_afterInsert1($id, $new);
    }

    protected function _afterUpdate($id, array $new, array $old)
    {
        $this->_afterUpdate1($id, $new, $old);
    }

    protected function _beforeDelete($id, array $old)
    {
        $this->_beforeDelete1($id, $old);
    }

    protected function _afterDelete($id, array $old)
    {
        $this->_afterDelete1($id, $old);
    }
}