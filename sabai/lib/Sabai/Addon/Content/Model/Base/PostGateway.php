<?php
/* This file has been auto-generated. Do not edit this file directly. */

abstract class Sabai_Addon_Content_Model_Base_PostGateway extends SabaiFramework_Model_Gateway
{
    public function getName()
    {
        return 'content_post';
    }

    public function getFields()
    {
        return array('post_title' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'post_slug' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'post_published' => SabaiFramework_Model::KEY_TYPE_INT, 'post_status' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'post_views' => SabaiFramework_Model::KEY_TYPE_INT, 'post_entity_bundle_name' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'post_entity_bundle_type' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'post_id' => SabaiFramework_Model::KEY_TYPE_INT, 'post_created' => SabaiFramework_Model::KEY_TYPE_INT, 'post_updated' => SabaiFramework_Model::KEY_TYPE_INT, 'post_user_id' => SabaiFramework_Model::KEY_TYPE_INT);
    }

    protected function _getIdFieldName()
    {
        return 'post_id';
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %s FROM %scontent_post WHERE post_id = %d',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $id
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %s FROM %scontent_post WHERE post_id IN (%s)',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            implode(', ', array_map('intval', $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %1$s FROM %2$scontent_post content_post WHERE %3$s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $criteriaStr
        );
    }

    protected function _getInsertQuery(&$values)
    {
        $values['post_created'] = time();
        $values['post_updated'] = 0;
        return sprintf('INSERT INTO %scontent_post(post_title, post_slug, post_published, post_status, post_views, post_entity_bundle_name, post_entity_bundle_type, post_id, post_created, post_updated, post_user_id) VALUES(%s, %s, %d, %s, %d, %s, %s, %s, %d, %d, %d)', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['post_title']), $this->_db->escapeString($values['post_slug']), $values['post_published'], $this->_db->escapeString($values['post_status']), $values['post_views'], $this->_db->escapeString($values['post_entity_bundle_name']), $this->_db->escapeString($values['post_entity_bundle_type']), empty($values['post_id']) ? 'NULL' : intval($values['post_id']), $values['post_created'], $values['post_updated'], $values['post_user_id']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['post_updated'];
        $values['post_updated'] = time();
        return sprintf('UPDATE %scontent_post SET post_title = %s, post_slug = %s, post_published = %d, post_status = %s, post_views = %d, post_entity_bundle_name = %s, post_entity_bundle_type = %s, post_updated = %d, post_user_id = %d WHERE post_id = %d AND post_updated = %d', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['post_title']), $this->_db->escapeString($values['post_slug']), $values['post_published'], $this->_db->escapeString($values['post_status']), $values['post_views'], $this->_db->escapeString($values['post_entity_bundle_name']), $this->_db->escapeString($values['post_entity_bundle_type']), $values['post_updated'], $values['post_user_id'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$scontent_post WHERE post_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['post_updated'] = 'post_updated=' . time();
        return sprintf('UPDATE %scontent_post content_post SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(', ', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE content_post FROM %1$scontent_post content_post WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$scontent_post content_post WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }
}